name: Token Federation test
on:
  workflow_dispatch:
  permissions:
    id-token: write
    contents: read
  test:
    runs-on: self-hosted
    steps:
      - name: get authentik token
        run: "echo \"ACTIONS_ID_TOKEN_REQUEST_TOKEN: $ACTIONS_ID_TOKEN_REQUEST_TOKEN\"\nOIDC_TOKEN_RESPONSE=$(curl -H \"Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN\" \"$ACTIONS_ID_TOKEN_REQUEST_URL\")\n\n# Extract the token from the response\nGITHUB_JWT=$(echo $OIDC_TOKEN_RESPONSE | jq -r '.value')\n\n  \nRESPONSE=$(curl -X POST https://authentik.local.001083.xyz/application/o/token/ \\\n  -H \"Content-Type: application/x-www-form-urlencoded\" \\\n  -d \"grant_type=client_credentials\" \\\n  -d \"client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer\" \\\n  -d \"client_assertion=$GITHUB_JWT\" \\\n  -d \"client_id=Ov23licfzX3iwK2HedzP\")\necho \"response: $RESPONSE\"\n\necho \"RESPONSE=$RESPONSE\" >> $GITHUB_ENV\n"
      - name: use authentik token to nake a secret in hashicorp vault
        run: |
          # use authentik token to make a secret in hashicorp vault
          inputJWT=${{ env.RESPONSE }}
          curl -X POST https://vault.local.001083.xyz/v1/secret/data/github \
            -H "Authorization: Bearer $inputJWT" \
            -H "Content-Type: application/json" \
            -d '{"data": {"token": "$inputJWT"}}'
