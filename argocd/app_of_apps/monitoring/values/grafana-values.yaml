extraSecretMounts:
  - name: secret-files
    mountPath: /certs
    secretName: local-001083-xyz-tls
    readOnly: true
    optional: false
    subPath: ""
envFromSecrets:
  - name: grafana-postgres-db-postgresql-account-postgres
    prefix: POSTGRES_
    optional: false
  - name: grafana-oauth-secret
    optional: false
env:
  GF_SERVER_ROOT_URL: "https://grafana.local.001083.xyz"
rbac:
  create: true
adminUser: admin
adminPassword: admin
sidecar:
  dashboards:
    enabled: true
    label: grafana_dashboard
    labelValue: 1
    searchNamespace: ALL
    provider:
      allowuiupdates: false
      foldersFromFilesStructure: true
  datasources:
    enabled: true
    label: grafana_datasource
    labelValue: 1
    searchNamespace: ALL
    provider:
      allowuiupdates: false
      foldersFromFilesStructure: true
grafana.ini:
  server:
    root_url: "https://grafana.local.001083.xyz"
  database:
    type: postgres
    host: grafana-postgres-db-postgresql-postgresql.monitoring.svc.cluster.local
    name: grafana
    user: ${POSTGRES_username}
    password: ${POSTGRES_password}
  auth:
    signout_redirect_url: "https://authentik.company/application/o/grafana/end-session/"
    oauth_auto_login: true
  generic_oauth:
    name: authentik
    enabled: true
    tls_skip_verify_insecure: true
    client_id: ${GF_AUTH_GENERIC_OAUTH_CLIENT_ID}
    client_secret: 2jisTLhkutzyrMYHi7JPRqMMj3NspxnCukaHHA8kG66ILBCXO8DISHOPhdtLwSN0V5gEwH6S06ZVfgPxur6HlFo43KtcEfVcfmdeqXyblchmHvWmaYcwFv339vvAi2CS
    auth_url: ${GF_AUTH_GENERIC_OAUTH_AUTH_URL}
    api_url: ${GF_AUTH_GENERIC_OAUTH_API_URL}
    token_url: ${GF_AUTH_GENERIC_OAUTH_TOKEN_URL}
    scopes: "openid profile email offline_access"
