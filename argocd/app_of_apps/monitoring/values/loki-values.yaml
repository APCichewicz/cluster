loki:
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: azure
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  ingester:
    chunk_encoding: snappy
  tracing:
    enabled: true
  querier:
    max_concurrent: 4

  storage:
    type: azure
    azure:
      # Name of the Azure Blob Storage account
      accountName: mimirmetrics
      # Key associated with the Azure Blob Storage account
      accountKey: ${AZURE_STORAGE_ACCOUNT_KEY}
      # Comprehensive connection string for Azure Blob Storage account (Can be used to replace endpoint, accountName, and accountKey)
      # connectionString: <your-connection-string>
      # # Flag indicating whether to use Azure Managed Identity for authentication
      # useManagedIdentity: false
      # # Flag indicating whether to use a federated token for authentication
      # useFederatedToken: false
      # # Client ID of the user-assigned managed identity (if applicable)
      # userAssignedId: <your-user-assigned-id>
      # # Timeout duration for requests made to the Azure Blob Storage account (in seconds)
      # requestTimeout: <your-request-timeout>
      # Domain suffix of the Azure Blob Storage service endpoint (e.g., core.windows.net)
      endpointSuffix: core.windows.net
    bucketNames:
      chunks: "chunks"
      ruler: "ruler"
      admin: "admin"

deploymentMode: SimpleScalable

write:
  extraArgs:
    - "-config.expand-env=true"
  extraEnvFrom:
    - secretRef:
        name: mimir-blob-sa-key
read:
  extraArgs:
    - "-config.expand-env=true"
  extraEnvFrom:
    - secretRef:
        name: mimir-blob-sa-key
backend:
  extraArgs:
    - "-config.expand-env=true"
  extraEnvFrom:
    - secretRef:
        name: mimir-blob-sa-key

# Disable minio storage
minio:
  enabled: false
# ---
# serviceAccount: # There is no way to set an account per component
#   create: true
#   name: loki-sa
# loki:
#   auth_enabled: true
#   commonConfig:
#     path_prefix: /var/loki
#   schemaConfig:
#     configs:
#       - from: "2024-04-08"
#         index:
#           period: 24h
#           prefix: index_
#         object_store: azure
#         schema: v13
#         store: tsdb
#   storage:
#     bucketNames: 
#       chunks: loki-data
#       ruler: loki-ruler
#     type: azure
#     azure:
#       accountName: mimirmetrics
#       accountKey:  ${AZURE_STORAGE_ACCOUNT_KEY}
#   storage_config:
#     tsdb_shipper:
#       active_index_directory: /var/loki/tsdb-shipper-active
#       cache_location: /var/loki/tsdb-shipper-cache
#       cache_ttl: 24h
#   rulerConfig:
#     alertmanager_url: http://monitor-alertmanager.monitoring.svc:9093
#     enable_alertmanager_v2: true
#     enable_sharding: true
#   limits_config:
#     ingestion_rate_mb: 10
#     retention_period: 7d # Global Metrics TTL
#   ingester:
#     max_chunk_age: 1h
#   querier:
#     query_ingesters_within: 2h
#   compactor:
#     working_directory: /var/loki/compactor
#     delete_request_store: s3
#     retention_enabled: true
#     delete_request_cancel_period: 5m
#     retention_delete_delay: 5m
#   extraArgs:
#     - "-config.expand-env=true"
#   extraEnvFrom:
#     - secretRef:
#         name: mimir-blob-sa-key
# write:
#   extraArgs:
#     - "-config.expand-env=true"
#   extraEnvFrom:
#     - secretRef:
#         name: mimir-blob-sa-key
# read:
#   extraArgs:
#     - "-config.expand-env=true"
#   extraEnvFrom:
#     - secretRef:
#         name: mimir-blob-sa-key
# backend:
#   extraArgs:
#     - "-config.expand-env=true"
#   extraEnvFrom:
#     - secretRef:
#         name: mimir-blob-sa-key
  
#   gateway:
#     enabled: true
#   chunksCache:
#     enabled: true

# test:
#   enabled: false
# lokiCanary:
#   enabled: false

# gateway:
#   service:
#     labels:
#       prometheus.io/service-monitor: 'false' # nginx exporter unavailable


# # deploymentMode: SimpleScalable

# # Disable minio storage
# minio:
#   enabled: false
